/*
Copyright Â© 2023 VMware, Inc. All Rights Reserved.
SPDX-License-Identifier: MPL-2.0
*/

package clusterbackupschedule

import (
	"github.com/go-openapi/swag"
)

// VmwareTanzuManageV1alpha1ClusterDataProtectionScheduleRequest VmwareTanzuManageV1alpha1ClusterDataProtectionScheduleUpdateScheduleResponse Response from updating a Schedule.
//
// swagger:model vmware.tanzu.manage.v1alpha1.cluster.dataprotection.schedule.UpdateScheduleResponse.
type VmwareTanzuManageV1alpha1ClusterDataProtectionScheduleRequest struct {

	// Schedule updated.
	Schedule *VmwareTanzuManageV1alpha1ClusterDataProtectionScheduleSchedule `json:"schedule,omitempty"`
}

// MarshalBinary interface implementation.
func (m *VmwareTanzuManageV1alpha1ClusterDataProtectionScheduleRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}

	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation.
func (m *VmwareTanzuManageV1alpha1ClusterDataProtectionScheduleRequest) UnmarshalBinary(b []byte) error {
	var res VmwareTanzuManageV1alpha1ClusterDataProtectionScheduleRequest

	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}

	*m = res

	return nil
}

// VmwareTanzuManageV1alpha1ClusterDataProtectionScheduleResponse VmwareTanzuManageV1alpha1ClusterDataProtectionScheduleUpdateScheduleResponse Response from updating a Schedule.
//
// swagger:model vmware.tanzu.manage.v1alpha1.cluster.dataprotection.schedule.UpdateScheduleResponse.
type VmwareTanzuManageV1alpha1ClusterDataProtectionScheduleResponse struct {

	// Schedule updated.
	Schedule *VmwareTanzuManageV1alpha1ClusterDataProtectionScheduleSchedule `json:"schedule,omitempty"`
}

// MarshalBinary interface implementation.
func (m *VmwareTanzuManageV1alpha1ClusterDataProtectionScheduleResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}

	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation.
func (m *VmwareTanzuManageV1alpha1ClusterDataProtectionScheduleResponse) UnmarshalBinary(b []byte) error {
	var res VmwareTanzuManageV1alpha1ClusterDataProtectionScheduleResponse

	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}

	*m = res

	return nil
}

// VmwareTanzuManageV1alpha1ClusterDataProtectionScheduleListSchedulesResponse Response from listing Schedules.
//
// swagger:model vmware.tanzu.manage.v1alpha1.cluster.dataprotection.schedule.ListSchedulesResponse.
type VmwareTanzuManageV1alpha1ClusterDataProtectionScheduleListSchedulesResponse struct {

	// List of schedules.
	Schedules []*VmwareTanzuManageV1alpha1ClusterDataProtectionScheduleSchedule `json:"schedules"`

	// Total count.
	TotalCount string `json:"totalCount,omitempty"`
}

// MarshalBinary interface implementation.
func (m *VmwareTanzuManageV1alpha1ClusterDataProtectionScheduleListSchedulesResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}

	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation.
func (m *VmwareTanzuManageV1alpha1ClusterDataProtectionScheduleListSchedulesResponse) UnmarshalBinary(b []byte) error {
	var res VmwareTanzuManageV1alpha1ClusterDataProtectionScheduleListSchedulesResponse

	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}

	*m = res

	return nil
}

// VmwareTanzuManageV1alpha1ClusterDataProtectionScheduleDeleteScheduleResponse Response from deleting a Schedule.
//
// swagger:model vmware.tanzu.manage.v1alpha1.cluster.dataprotection.schedule.DeleteScheduleResponse.
type VmwareTanzuManageV1alpha1ClusterDataProtectionScheduleDeleteScheduleResponse struct {

	// Message regarding deletion.
	Message string `json:"message,omitempty"`
}

// MarshalBinary interface implementation.
func (m *VmwareTanzuManageV1alpha1ClusterDataProtectionScheduleDeleteScheduleResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}

	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation.
func (m *VmwareTanzuManageV1alpha1ClusterDataProtectionScheduleDeleteScheduleResponse) UnmarshalBinary(b []byte) error {
	var res VmwareTanzuManageV1alpha1ClusterDataProtectionScheduleDeleteScheduleResponse

	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}

	*m = res

	return nil
}

// !!! NOT GENERATED BY SWAGGER !!!.

type ListBackupSchedulesRequest struct {
	// Scope can be provider or cluster.
	SearchScope *ListBackupSchedulesSearchScope `json:"searchScope"`

	// Sort results by.
	SortBy string `json:"sortBy,omitempty"`

	// Query to run against the API.
	Query string `json:"query,omitempty"`

	// Include Total.
	IncludeTotalCount bool `json:"includeTotal"`
}

// MarshalBinary interface implementation.
func (m *ListBackupSchedulesRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}

	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation.
func (m *ListBackupSchedulesRequest) UnmarshalBinary(b []byte) error {
	var res ListBackupSchedulesRequest

	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}

	*m = res

	return nil
}
